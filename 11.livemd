<!-- livebook:{"hub_id":"team-weiz"} -->

# Day11

## Section

```elixir
example = "125 17"
input = "9759 0 256219 60 1175776 113 6 92833"

defmodule Day11 do
  def lookup(cache, number, depth) do
    case :ets.lookup(cache, {number, depth}) do
      [{_k, v}] -> v
      _ -> nil
    end
  end

  def insert(cache, number, depth, v) do
    true = :ets.insert_new(cache, {{number, depth}, v})
  end

  def solve(input, target_depth) do
    cache = :ets.new(:cache, [])

    line =
      input
      |> String.split(" ", trim: true)
      |> Enum.map(&String.to_integer/1)

    line
    |> Enum.map(&blink(&1, 0, cache, target_depth))
    |> Enum.sum()
  end

  def blink(_num, depth, _, depth), do: 1

  def blink(num, depth, cache, target_depth) do
    cond do
      num == 0 ->
        blink(1, depth + 1, cache, target_depth)

      rem(len = String.length(sh = to_string(num)), 2) == 0 ->
        {slh, srh} = String.split_at(sh, div(len, 2))

        if sum = lookup(cache, num, depth) do
          sum
        else
          sum =
            blink(String.to_integer(srh), depth + 1, cache, target_depth) +
              blink(String.to_integer(slh), depth + 1, cache, target_depth)

          insert(cache, num, depth, sum)
          sum
        end

      true ->
        blink(num * 2024, depth + 1, cache, target_depth)
    end
  end
end

IO.inspect(Day11.solve(input, 25), label: "Part 1")
IO.inspect(Day11.solve(input, 75), label: "Part 2")
```

<!-- livebook:{"offset":1457,"stamp":{"token":"XCP.Ys4D-8YNLDuIgKXJN9gZrQFgg8zldcdosarHGI8oS_K3bq7pgvySLT4WMKtuPg","token_signature":"kbnxtXEelEVxfpRKVeTD5bGdYEGEbByRYDLbZVbnk2wHtBe0StMxwhg5GGYKAcgwGzcxWjpLPPegeWy8AZaC2P400sAXHXrjGtihyEG5zFtqgQ8wbg69766klWXe1t87cljX-EkZnR9SrDXfOd1O2aIQlvV2RgjMFaxXHZYxzr3OD95J61XMaV4OsVaNiYfiNAki8fKIlVdwdaQoFKWKHuQHr4tzA85t3fixnBUfg9pk0QQCUxnG8thmiMrKmv6-kvEwV0vjyXjKFWMUTQN60Y61RasqzxXD00qQKP4e7d54B1l0vzxWWwnA7f4aPD_G98Z6qlX2gJqwWz-77m4hBQ","version":1}} -->
